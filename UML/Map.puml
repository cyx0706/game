@startuml

note as N1
SCOORD 继承内置的结构体 COORD并重载了运算符

bool operator<(const SCOORD &pos)
bool operator>(const SCOORD &pos)
bool operator==(const SCOORD &pos)

bool operator<(const SCOORD &pos) const
bool operator>(const SCOORD &pos) const
bool operator==(const SCOORD &pos) const
end note

class Map{
friend class GameLoop
+int id;  //根据这个在文件里查找
+char edgeSign
+SCOORD initPos // 记录用户的初始化位置
+void deleteBarrier(SCOORD& pos, string& type)
+void initMap()
+void move(int key) // 用户移动来调用这个
+static void gotoxy(SCOORD pos)
+void print(char playerChar = 'P')  // 显示用户
+void clean(SCOORD clPos) // 清除
+int checkEvent()// 检查事件
+void load(int mapId) // 载入地图
+void nextMap(int mapId)
+void showDescription()
+static void setCursorStatus(bool visiable)
+static bool canEnter(int mapId, int fromMapId)
+static bool checkSpecialScene(int toMapId)
-vector<short>edgeLeft  // 不能在类里声明大小,除非声明为静态
-vector<short>edgeRight // 左右边界
-vector<short>doorPosTop  // 上下侧的门
-vector<short>doorPosBottom;
-vector<SCOORD>barrier
-map<SCOORD, int>items  //映射对应物品id
-map<SCOORD, string>npcs// 映射对应的NPC
-map<SCOORD, string>monsters// 映射对应的怪
-string nameCN
-string nameEN
-map<SCOORD, int>roadTo  //地图联通
-map<SCOORD, SCOORD>road   //道路联通
-bool checkBottomMapTransition()
-bool checkTopMapTransition()
-void initChar(char playerChar = 'P')
-void initBarrier()
}



@enduml